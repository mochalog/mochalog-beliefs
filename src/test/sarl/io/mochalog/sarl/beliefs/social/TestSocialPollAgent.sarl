/**
 * Copyright 2017 The Mochalog-SARL-Beliefs Authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
package io.mochalog.sarl.beliefs.social

import io.mochalog.sarl.beliefs.TestBeliefAgent
import io.mochalog.sarl.beliefs.query.BeliefQuery

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging

/** 
 * Agent allowing for convenient testing of social experiments.
 * <p>
 * Currently limited, tests should be conducted using JUnit.
 */
agent TestSocialPollAgent 
{
    uses Lifecycle, Logging, DefaultContextInteractions, SocialBeliefs
    
    on Initialize
    {
        setSkill(new BasicBeliefSocialisation(this), SocialBeliefs)

        if (occurrence.parameters.length > 0) 
        {
            // Spawn several agents as configured in
            // agent parameters
            val agentsToSpawn = Integer.parseInt(occurrence.parameters.get(0) as String)
            for (var i = 0; i < agentsToSpawn; i++)
            {   
                spawn(TestBeliefAgent)   
            }
            
            // Check whether anybody in the space believes test_belief
            defaultSpace.isBelievedByAny(new BeliefQuery("test_belief")) [ result |
                info("At least one agent in space believes query: " + result)
            ]
        }
        else
        {
            error("No belief agents spawned.")
        }
    }
}